#!/bin/env bash
# (c) 2014 Amplify Education, Inc. All rights reserved, subject to the license
# below.
#
# Education agencies that are members of the Smarter Balanced Assessment
# Consortium as of August 1, 2014 are granted a worldwide, non-exclusive, fully
# paid-up, royalty-free, perpetual license, to access, use, execute, reproduce,
# display, distribute, perform and create derivative works of the software
# included in the Reporting Platform, including the source code to such software.
# This license includes the right to grant sublicenses by such consortium members
# to third party vendors solely for the purpose of performing services on behalf
# of such consortium member educational agencies.

#
# chkconfig: 345 90 10

# Source function library.
. /etc/rc.d/init.d/functions

# lock file
LOCK_FILE=/var/run/repmgrd/repmgrd-watcher.pid
REPMGRD_PID=/var/run/repmgrd/repmgrd.pid

monitor() {
        if [ -e ${LOCK_FILE} ] && kill -0 `cat ${LOCK_FILE}` ; then
                echo "already running"
                exit 2 
        fi
        trap "rm -f ${LOCK_FILE}; exit" INT TERM EXIT KILL
        echo $BASHPID > $LOCK_FILE
        while [ 1 ]; do
                # check repmgrd is running
                if [ ! -e ${REPMGRD_PID} ] 
                then
                        /etc/init.d/repmgrd start 2>&1 >> /dev/null
                        sleep 10
                elif [ -e ${REPMGRD_PID} ] && ! kill -0 `cat ${REPMGRD_PID}`  
                then
                        /etc/init.d/repmgrd start 2>&1 >> /dev/null
                        sleep 10     
                else
                   sleep 10
                fi
        done
}

start() {
        echo "start the watcher"
        monitor &
}

stop() {
       echo "stop the watcher"
       if [ -f $LOCK_FILE ]; then
           kill -s KILL `cat $LOCK_FILE`
       fi
       rm -f $LOCK_FILE
}

case $1 in
        start)
                start
        ;;
        stop)
                stop
        ;;
        *)

        echo $"Usage: repmgrd {start|stop}"
        exit 2
esac
exit $RETVAL
